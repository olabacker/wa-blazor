@using Microsoft.JSInterop
@inject IJSRuntime JS

<wa-checkbox id="@_id" checked="@Checked"  >@ChildContent</wa-checkbox>

<script>
    window.addWaChangeListenerCheckBox = function (dotNetObj, elementId) {
        const checkbox = document.getElementById(elementId);
        checkbox.addEventListener('wa-change', function (event) {
            dotNetObj.invokeMethodAsync('OnWaChange', event.target.checked);
        });
    };
</script>

@code {
    [Parameter]
    public bool Checked { get; set; }

    [Parameter]
    public EventCallback<bool> CheckedChanged { get; set; }
    
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    private string _id = Guid.NewGuid().ToString();

    private DotNetObjectReference<WaCheckbox>? _dotNetRef;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            _dotNetRef = DotNetObjectReference.Create(this);
            await JS.InvokeVoidAsync("addWaChangeListenerCheckBox", _dotNetRef, _id);
        }
    }
    
    [JSInvokable]
    public void OnWaChange(bool isChecked)
    {
        CheckedChanged.InvokeAsync(isChecked);
    }
}